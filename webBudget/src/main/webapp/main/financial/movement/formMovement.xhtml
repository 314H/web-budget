<!--
  Copyright (C) 2015 Arthur Gregorio, AG.Software
 
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:pe="http://primefaces.org/ui/extensions"
                template="/template/mainTemplate.xhtml">

    <f:metadata>
        <f:viewAction action="#{movementBean.initializeForm(param.movementId, param.detailing)}"/>
    </f:metadata>

    <ui:define name="breadcrumb">
        <p:menuitem url="#"
                    value="#{breadcrumb['financial']}" />
        <p:menuitem url="listMovements.xhtml"
                    value="#{breadcrumb['financial.movement']}" />
        <p:menuitem url="formMovement.xhtml"
                    value="#{breadcrumb['inclusion']}" 
                    rendered="#{movementBean.viewState eq 'ADDING'}"/>
        <p:menuitem url="#"
                    value="#{breadcrumb['edition']}" 
                    rendered="#{movementBean.viewState eq 'EDITING'}"/>
    </ui:define>

    <ui:define name="content">

        <h:form id="movementForm" prependId="false">
            <div class="ui-grid-row">
                <div class="ui-grid-col-12">
                    <p:messages id="messages" closable="true" />
                </div> 
            </div> 
            <h:panelGroup layout="block" 
                          rendered="#{movementBean.haveOpenPeriod() eq true}"
                          styleClass="ui-grid-row financial-period-info flat-box">
                <div class="ui-grid-col-5 active-period-text">
                    <h:outputText value="#{messages['movement.form.current-period']}: "/>
                    <p:spacer width="10"/>
                    <h:outputText value="#{movementBean.financialPeriod.expired eq true 
                                           ? messages['movement.form.financial-period.not-active'] 
                                           : movementBean.financialPeriod.identification}" />
                </div>
                <div class="ui-grid-col-7 div-align-right">
                    <p:outputLabel for="inLaunchPeriod" 
                                   value="#{messages['movement.form.launch-period']}: "/>
                    <p:spacer width="10"/>
                    <p:selectOneMenu id="inLaunchPeriod" 
                                     styleClass="period-combo"
                                     converter="omnifaces.SelectItemsConverter"
                                     value="#{movementBean.movement.financialPeriod}">
                        <f:selectItems var="financialPeriod" 
                                       itemValue="#{financialPeriod}"
                                       itemLabel="#{financialPeriod.expired eq true 
                                                    ? financialPeriod.identification.concat(' - ')
                                                    .concat(messages['movement.form.expired']) 
                                                    : financialPeriod.identification}"
                                       value="#{movementBean.openFinancialPeriods}" /> 
                    </p:selectOneMenu>
                </div>
            </h:panelGroup>
            <h:panelGroup layout="block" 
                          rendered="#{movementBean.haveOpenPeriod() eq false}"
                          styleClass="ui-grid-row financial-period-info flat-box">
                <div class="ui-grid-col-8 no-period-text">
                    <h:outputText value="#{messages['movement.form.financial-period-not-open']}" />
                </div>
                <div class="ui-grid-col-4 div-align-right">
                    <p:link href="#{movementBean.changeToOpenFinancialPeriod()}"
                            value="#{messages['movement.form.financial-period-open']}" />
                </div>
            </h:panelGroup>
            <div class="ui-grid-row flat-box">
                <div class="ui-grid-col-6">
                    <div class="ui-grid-row">
                        <div class="ui-grid-col-12 form-group form-group-m">
                            <p:outputLabel for="inContact" 
                                           value="#{messages['movement.form.contact']}: "/>
                            <div class="input-and-button-box">
                                <p:inputText id="inContact" 
                                             readonly="true"
                                             value="#{movementBean.movement.contactName}" />
                                <p:commandButton immediate="true"
                                                 icon="fa fa-search" 
                                                 actionListener="#{movementBean.showContactDialog()}"/>
                            </div>
                        </div>                        
                    </div>
                    <h:panelGroup id="valuePanel"
                                  layout="block" 
                                  class="ui-grid-row">
                        <div class="ui-grid-col-12 form-group form-group-m">
                            <p:outputLabel for="inValue" 
                                           value="#{messages['movement.form.value']}: "/>
                            <pe:inputNumber id="inValue" 
                                            symbol="R$ "
                                            decimalPlaces="2" 
                                            decimalSeparator="," 
                                            thousandSeparator="." 
                                            value="#{movementBean.movement.value}"
                                            disabled="#{movementBean.viewState eq 'EDITING' or 
                                                        not empty movementBean.movement.apportionments}">
                                <f:converter converterId="javax.faces.BigDecimal" />
                            </pe:inputNumber>  
                        </div>                        
                    </h:panelGroup>
                    <div class="ui-grid-row">
                        <div class="ui-grid-col-12 form-group form-group-m">
                            <p:outputLabel for="inDueDate" 
                                           value="#{messages['movement.form.due-date']}: "/>
                            <p:calendar id="inDueDate" 
                                        mask="true"
                                        showOn="button" 
                                        pattern="dd/MM/yyyy"
                                        value="#{movementBean.movement.dueDate}" />
                        </div>                        
                    </div>
                    <div class="ui-grid-row">
                        <div class="ui-grid-col-12 form-group form-group-xl">
                            <p:outputLabel for="inDescription" 
                                           value="#{messages['movement.form.description']}: "/>
                            <p:inputTextarea id="inDescription" 
                                             maxlength="255"
                                             autoResize="false"
                                             value="#{movementBean.movement.description}" />
                        </div>                        
                    </div>
                </div>
                <div class="ui-grid-col-6 apportionment-box">
                    <div class="ui-grid-row">
                        <div class="ui-grid-col-6 apportionment-text-box">
                            <p:outputLabel styleClass="apportionment-label"
                                           value="#{messages['movement.form.apportionment']}:"/>
                        </div>
                        <div class="ui-grid-col-6 div-align-right">
                            <p:commandButton update="messages"
                                             value="#{menu['add']}"
                                             process="@this,inValue"
                                             styleClass="ui-button-info"
                                             disabled="#{movementBean.viewState eq 'DETAILING'}"
                                             actionListener="#{movementBean.showApportionmentDialog()}"/>
                        </div>
                    </div>
                    <div class="ui-grid-row div-mg-t-15">
                        <div class="ui-grid-col-12">
                            <p:dataTable id="apportionmentList" 
                                         rows="15"
                                         paginator="true"
                                         var="apportionment"
                                         paginatorPosition="bottom"
                                         paginatorAlwaysVisible="false"
                                         value="#{movementBean.movement.apportionments}"
                                         emptyMessage="#{messages['apportionment.empty']}">

                                <p:column style="text-align: center"
                                          headerText="#{messages['apportionment.cost-center']}">
                                    #{apportionment.costCenter.name}
                                </p:column>
                                <p:column style="text-align: center"
                                          headerText="#{messages['apportionment.movement-class']}">
                                    #{apportionment.movementClass.name}
                                </p:column>
                                <p:column width="20%" 
                                          style="text-align: center"
                                          headerText="#{messages['apportionment.apportionment']}">
                                    <h:outputText value="#{apportionment.value}">
                                        <f:convertNumber pattern="¤#,##0.00" currencySymbol="R$ " />
                                    </h:outputText>
                                </p:column>
                                <p:column width="10%" 
                                          style="text-align: center"
                                          headerText="#{menu['actions']}">
                                    <p:commandButton immediate="true"
                                                     icon="fa fa-remove"
                                                     title="#{menu['delete']}"
                                                     disabled="#{movementBean.viewState eq 'DETAILING'}"
                                                     actionListener="#{movementBean.deleteApportionment(apportionment.code)}" />
                                </p:column>
                            </p:dataTable>
                        </div>
                    </div>
                </div>
            </div>
            <div class="ui-grid-row flat-box">
                <div class="ui-grid-col-6">

                </div>
                <div class="ui-grid-col-6 form-controls-box">
                    <p:commandButton immediate="true"
                                     value="#{menu['back']}"
                                     action="#{movementBean.doCancel()}"/>
                    <p:spacer width="10"/>
                    <p:commandButton immediate="true"
                                     value="#{menu['payment']}"
                                     styleClass="ui-button-info"
                                     rendered="#{movementBean.viewState eq 'DETAILING'}"
                                     actionListener="#{movementBean.showPaymentDetails()}"/>
                    <p:commandButton update="movementForm"
                                     process="movementForm"
                                     value="#{menu['pay']}"
                                     styleClass="ui-button-warning"
                                     actionListener="#{movementBean.doSaveAndPay()}"
                                     rendered="#{movementBean.viewState eq 'ADDING' 
                                                 and movementBean.haveOpenPeriod() eq true}"/>
                    <p:spacer width="10" rendered="#{movementBean.viewState eq 'ADDING' 
                                                     and movementBean.haveOpenPeriod() eq true}"/>
                    <p:commandButton update="movementForm"
                                     process="movementForm"
                                     value="#{menu['save']}"
                                     styleClass="ui-button-success"
                                     actionListener="#{movementBean.doSave()}"
                                     rendered="#{movementBean.viewState eq 'ADDING' 
                                                 and movementBean.haveOpenPeriod() eq true}"/>
                    <p:commandButton update="movementForm"
                                     process="movementForm"
                                     value="#{menu['update']}"
                                     styleClass="ui-button-success"
                                     actionListener="#{movementBean.doUpdate()}"
                                     rendered="#{movementBean.viewState eq 'EDITING'}"/>
                </div>
            </div>
        </h:form>
    </ui:define>

    <ui:define name="popups">
        <ui:include src="dialogContact.xhtml" />
        <ui:include src="dialogPayment.xhtml" />
        <ui:include src="dialogApportionment.xhtml" />
        <ui:include src="dialogDetailPayment.xhtml" />
    </ui:define>
</ui:composition>