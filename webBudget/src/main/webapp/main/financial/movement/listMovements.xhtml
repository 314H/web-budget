<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:of="http://omnifaces.org/functions"
                xmlns:sec="http://www.springframework.org/security/tags"
                template="/template/mainTemplate.xhtml">

    <ui:define name="head">
        <f:event type="preRenderView" 
                 listener="#{movementBean.initializeListing()}" />
    </ui:define>

    <ui:define name="breadcrumb">
        <p:menuitem url="#"
                    value="#{breadcrumb['financial']}" />
        <p:menuitem url="listCards.xhtml"
                    value="#{breadcrumb['financial.movement']}" />
    </ui:define>

    <ui:define name="content">

        <div class="ui-grid-row">
            <div class="ui-grid-col-12">
                <p:messages id="messages" closable="true" globalOnly="true"/>
            </div>
        </div>

        <h:form id="controlsForm" prependId="false">
            <div class="ui-grid-row div-pd-tb-10">
                <div class="ui-grid-col-7 filter-group form-group-l">
                    <p:inputText id="inFilter" 
                                 value="#{movementBean.filter}" 
                                 placeholder="#{messages['movement.filter.types']}"/>
                </div>
                <div class="ui-grid-col-1">
                    <p:selectBooleanCheckbox id="inIsPaid" 
                                             styleClass="check-paid"
                                             value="#{movementBean.filterPaid}"
                                             itemLabel="#{messages['movement.filter.set-paid']}"/>
                </div>
                <div class="ui-grid-col-4 div-align-right">
                    <p:commandButton value="#{menu['filter']}"
                                     action="#{movementBean.filterList()}"/>
                    <sec:authorize ifAnyGranted="#{permissionsBean.authority.MOVEMENT_INSERT}">
                        <p:spacer width="10" />
                        <p:commandButton immediate="true"
                                         value="#{menu['add']}"
                                         styleClass="ui-button-info" 
                                         action="#{movementBean.changeToAdd()}"/>
                    </sec:authorize>
                </div>
            </div>
        </h:form>

        <div class="ui-grid-row div-pd-tb-10">
            <div class="ui-grid-col-12">
                <h:form prependId="false">
                    <p:dataTable id="movementsList" 
                                 rows="15"
                                 var="movement"
                                 paginator="true"
                                 selectionMode="single"
                                 rowKey="#{movement.id}"
                                 paginatorPosition="bottom"
                                 paginatorAlwaysVisible="false"
                                 value="#{movementBean.movements}"
                                 selection="#{movementBean.selectedMovement}"
                                 emptyMessage="#{messages['movement.list.empty']}">

                        <p:ajax event="rowSelect" 
                                listener="#{movementBean.displayDetailsPopup()}" />

                        <p:column width="7%" 
                                  style="text-align: center"
                                  headerText="#{messages['movement.list.direction']}">
                            <p:graphicImage width="18"
                                            height="18"
                                            library="images" 
                                            name="ui-green-circle.png" 
                                            title="#{messages['movement.list.income']}"
                                            rendered="#{movement.movementDirection eq 'IN'}"/>
                            <p:graphicImage  width="18"
                                             height="18"
                                             library="images" 
                                             name="ui-red-circle.png" 
                                             title="#{messages['movement.list.outcome']}"
                                             rendered="#{movement.movementDirection eq 'OUT'}"/>
                        </p:column>
                        <p:column width="8%" 
                                  style="text-align: center"
                                  headerText="#{messages['movement.list.code']}">
                            #{movement.code}
                        </p:column>
                        <p:column headerText="#{messages['movement.list.description']}">
                            #{of:abbreviate(movement.description,50)}
                        </p:column>
                        <p:column width="15%"
                                  style="text-align: center" 
                                  headerText="#{messages['movement.list.movement-state-type']}">
                            <h:outputText style="color: green; font-weight: bold;"
                                          value="#{messages[movement.movementStateType]}"
                                          rendered="#{movement.movementStateType eq 'PAID'}" />
                            <h:outputText style="color: red; font-weight: bold;"
                                          value="#{messages[movement.movementStateType]}"
                                          rendered="#{movement.movementStateType eq 'OPEN'}" />
                            <h:outputText style="color: #0081c2; font-weight: bold;"
                                          value="#{messages[movement.movementStateType]}"
                                          rendered="#{movement.movementStateType eq 'CALCULATED'}" />
                            <h:outputText style="color: #ed9c28; font-weight: bold;"
                                          value="#{messages[movement.movementStateType]}"
                                          rendered="#{movement.movementStateType eq 'CANCELED'}" />
                        </p:column>
                        <p:column width="15%"
                                  style="text-align: center" 
                                  headerText="#{messages['movement.list.value']}">
                            <h:outputText value="R$ #{movement.value}" />
                        </p:column>
                        <p:column width="10%"
                                  style="text-align: center" 
                                  headerText="#{messages['movement.list.due-date']}">
                            <h:outputText value="#{movement.dueDate}">
                                <f:convertDateTime pattern="dd/MM/yyyy" />
                            </h:outputText> 
                        </p:column>
                        <p:column width="16%" 
                                  style="text-align: center"
                                  headerText="#{menu['actions']}">
                            <sec:authorize ifAnyGranted="#{permissionsBean.authority.MOVEMENT_PAY}">
                                <p:commandButton icon="ui-icon-check"
                                                 title="#{menu['pay']}"
                                                 rendered="#{movement.payable eq true}"
                                                 action="#{movementBean.changeToPay(movement.id)}" />
                            </sec:authorize>
                            <p:spacer width="10" 
                                      rendered="#{movement.payable eq true}"/>
                            <sec:authorize ifAnyGranted="#{permissionsBean.authority.MOVEMENT_UPDATE}">
                                <p:commandButton icon="ui-icon-pencil"
                                                 title="#{menu['edit']}"
                                                 rendered="#{movement.editable eq true}"
                                                 action="#{movementBean.changeToEdit(movement.id)}" />
                            </sec:authorize>
                            <p:spacer width="10" 
                                      rendered="#{movement.editable eq true}"/>
                            <sec:authorize ifAnyGranted="#{permissionsBean.authority.MOVEMENT_DELETE}">
                                <p:commandButton icon="ui-icon-trash"
                                                 title="#{menu['delete']}"
                                                 rendered="#{movement.deletable eq true}"
                                                 actionListener="#{movementBean.changeToDelete(movement.id)}" />
                            </sec:authorize>
                            <h:outputText value="-" 
                                          rendered="#{movement.movementStateType eq 'CALCULATED'}" />
                        </p:column>
                    </p:dataTable>
                </h:form>
            </div>
        </div>
    </ui:define>

    <ui:define name="popups">
        <ui:include src="dialogConfirmPayment.xhtml" />
        <ui:include src="dialogDeleteMovement.xhtml" />
        <ui:include src="dialogDetailMovement.xhtml" />
    </ui:define>
</ui:composition>